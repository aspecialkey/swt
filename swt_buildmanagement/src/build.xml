<?xml version="1.0" encoding="UTF-8"?>
<project name="swt_buildmanagement" basedir="." default="START_TARGET">

    <property name="TARGET_DIR" value="../tmp"/>
    <property name="SOURCE_DIR" value="../src"/>
    <property name="BIN_DIR" value="${TARGET_DIR}/bin"/>
    <property name="DOC_DIR" value="${TARGET_DIR}/doc"/>
    <property name="JAVA_CLASSPATH" value="C:\Program Files\Java\jdk1.8.0_101"/>
    <property name="JUNIT" value="C:\Program Files\JetBrains\IntelliJ IDEA 2017.1.3\lib\junit-4.12.jar"/>
    <property name="HAMCREST" value="C:\Program Files\JetBrains\IntelliJ IDEA 2017.1.3\lib\hamcrest-core-1.3.jar"/>
    <property name="JAR_NAME" value="buildmanagement.jar"/>

    <path id="classpath.test">
        <pathelement location="${JUNIT}"/>
        <pathelement location="${JAVA_CLASSPATH}"/>
    </path>


    <!-- default target, startpoint and calls other targets -->
    <target name="START_TARGET" description="runs all targets" depends="CLEAN, COPY_SOURCE, COMPILE, JAR, TEST, RUN, JAVADOC"/>


    <!--cleaning target_dir-->
    <target name="CLEAN" description="cleans up target directory">
        <delete dir="${TARGET_DIR}"/>
    </target>


    <!-- copy sources to working directory -->
    <target name="COPY_SOURCE" description="copy sources to working directory">
        <mkdir dir="${TARGET_DIR}"/>

        <!--depracted:-->
        <!--<copydir src="${SOURCE_DIR}" dest="${TARGET_DIR}"/>-->
        <copy todir="${TARGET_DIR}">
            <fileset dir="${SOURCE_DIR}" excludes="build.xml"/>
        </copy>
    </target>


    <!-- compiling sources for main program - used for COMPILING TARGET -->
    <target name="COMPILE_SOURCE" description="compiling sources for main program">
        <mkdir dir="${BIN_DIR}"/>
        <javac srcdir="${TARGET_DIR}/main/java/org/aspecialkey/buildmanagement"
               destdir="${BIN_DIR}"
               classpath="${JAVA_CLASSPATH}"
               debug="on"
        />
    </target>


    <!-- compiling sources for testing - used for COMPILE TARGET -->
    <target name="COMPILE_TEST" description="compiling sources for testing">
        <mkdir dir="${BIN_DIR}"/>
        <javac srcdir="${TARGET_DIR}/test/org/aspecialkey/buildmanagement"
               destdir="${BIN_DIR}"
               debug="on">
            <classpath refid="classpath.test"/>
        </javac>
    </target>


    <!-- compiling sources -->
    <target name="COMPILE" description="compiling sources" depends="COMPILE_SOURCE, COMPILE_TEST"/>


    <!-- creating JAR file -->
    <target name="JAR" description="creating JAR file">
        <jar destfile="${TARGET_DIR}/${JAR_NAME}" basedir="${BIN_DIR}">
            <manifest>
                <attribute name="Main-Class" value="org/aspecialkey/buildmanagement/Buildmanagement"/>
            </manifest>
        </jar>
    </target>


    <!-- junit tests -->
    <target name="TEST" description="junit tests">
        <junit printsummary="true">
            <classpath>
                <pathelement location="${BIN_DIR}"/>
                <pathelement path="${JUNIT}"/>
                <pathelement path="${HAMCREST}"/>
            </classpath>

            <!-- one simple test: -->
            <test name="org.aspecialkey.buildmanagement.BuildmanagementTest"/>

            <!-- or a lot of tests in batch mode: -->
            <batchtest>
                <fileset dir="${TARGET_DIR}/test/">
                    <include name="**/*Test*.java" />
                </fileset>
            </batchtest>

            <formatter type="plain" usefile="false"/>
        </junit>
    </target>


    <!-- creating javadoc -->
    <target name="JAVADOC" description="creating javadoc">
        <mkdir dir="${DOC_DIR}"/>
        <javadoc  encoding="UTF-8"
                  charset="UTF-8"
                  docencoding="UTF-8"
                  package="org.aspecialkey.buildmanagement"
                  sourcepath="${TARGET_DIR}/main/java"
                  destdir="${DOC_DIR}"
        />
    </target>


    <!-- runs the compiled program -->
    <target name="RUN" description="runs the compiled program">
        <exec executable="cmd" >
            <arg value="/c"/>
            <arg value="java -jar ${TARGET_DIR}/${JAR_NAME}"/>
            <arg value="-p"/>
        </exec>
    </target>


</project>